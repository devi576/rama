17. Longest Common Subsequence
source code:
def lcs(seq1, seq2):
    m = len(seq1)
    n = len(seq2)
    table = [[0] * (n + 1) for i in range(m + 1)]
    
    for i in range(1, m + 1):
        for j in range(1, n + 1):
            if seq1[i - 1] == seq2[j - 1]:
                table[i][j] = table[i - 1][j - 1] + 1
            else:
                table[i][j] = max(table[i - 1][j], table[i][j - 1])
    
    lcs_len = table[m][n]
    lcs = [""] * lcs_len
    i = m
    j = n
    while i > 0 and j > 0:
        if seq1[i - 1] == seq2[j - 1]:
            lcs[lcs_len - 1] = seq1[i - 1]
            i -= 1
            j -= 1
            lcs_len -= 1
        elif table[i - 1][j] > table[i][j - 1]:
            i -= 1
        else:
            j -= 1
    
    return "".join(lcs)
