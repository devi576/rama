31. Longest Common Substring
source code:
def longest_common_substring(s1, s2):
    """
    Returns the longest common substring between s1 and s2
    """
    m = len(s1)
    n = len(s2)

    # Initialize the length of the longest common substring and its end index
    max_len = 0
    end_index = 0

    # Initialize the dynamic programming table
    dp = [[0] * (n + 1) for _ in range(m + 1)]

    # Fill the dynamic programming table
    for i in range(1, m + 1):
        for j in range(1, n + 1):
            if s1[i - 1] == s2[j - 1]:
                dp[i][j] = dp[i - 1][j - 1] + 1
                if dp[i][j] > max_len:
                    max_len = dp[i][j]
                    end_index = i - 1
            else:
                dp[i][j] = 0

    # Return the longest common substring
    return s1[end_index - max_len + 1:end_index + 1]


# Test the function
s1 = "abcdefg"
s2 = "xyzabcde"
print(longest_common_substring(s1, s2))  # Output: "abc"
